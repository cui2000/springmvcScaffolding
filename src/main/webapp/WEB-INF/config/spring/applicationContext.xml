<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.2.xsd ">

	<!-- 解析注解 -->
	<mvc:annotation-driven />
	<!-- 扫描包 -->
	<context:component-scan base-package="demo" />
	<!-- 扫描配置数据源文件 -->
	<context:property-placeholder location="classpath:jdbc.properties,classpath:message.properties" />

	<!-- 配置数据源 -->
	<bean id="dataSourceHikari" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 连接只读数据库时配置为true， 保证安全 -->
		<property name="readOnly" value="false" />
		<!-- 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒 -->
		<property name="connectionTimeout" value="${jdbc.connectionTimeout}" />
		<!-- 一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟 -->
		<property name="idleTimeout" value="${jdbc.idleTimeout}" />
		<!-- 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒，参考MySQL wait_timeout参数（show variables like '%timeout%';） -->
		<property name="maxLifetime" value="${jdbc.maxLifetime}" />
		<!-- 连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count) -->
		<property name="maximumPoolSize" value="${jdbc.maximumPoolSize}" />
		<property name="minimumIdle" value="${jdbc.minimumIdle}" />
	</bean>

	<!-- 配置LocalSessionFactoryBean spring 提供整合hibernate工厂bean -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<!-- 注解数据源，进入源码中可以知道sessionFactory有该属性 -->
		<property name="dataSource" ref="dataSourceHikari" />
		<!-- 注入hiberna的核心配置文件属性 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
			</props>
		</property>
		<!-- 注入hibernate的映射文件属性 -->
		<!-- <property name="mappingLocations"> <list> <value>classpath:com/itwx/bos/domain/*.xml</value> </list> </property> -->
		<!-- 注解 -->
		<property name="packagesToScan">
			<list>
				<value>demo.bean</value>
			</list>
		</property>
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManger" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<!-- 注入sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- 开启事务 -->
	<!-- <tx:annotation-driven /> -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 导入其他文件 -->
	<!-- <import resource="applicationContext-mongodb.xml"/> -->
</beans>